import powerbi from "powerbi-visuals-api";
import IColorPalette = powerbi.extensibility.ISandboxExtendedColorPalette;
import IColorInfo = powerbi.IColorInfo;
export declare class MockIColorPalette implements IColorPalette {
    /**
     * This array represents the default colors of the IColorPalette.
     */
    private static DefaultColors;
    private colors;
    private colorIndex;
    constructor(colors?: IColorInfo[]);
    getColor(key: string): IColorInfo;
    isHighContrast: true;
    foreground: {
        value: "#333333";
    };
    foregroundLight: {
        value: "#FFF";
    };
    foregroundDark: {
        value: "#000";
    };
    foregroundNeutralLight: {
        value: "#EAEAEA";
    };
    foregroundNeutralDark: {
        value: "#212121";
    };
    foregroundNeutralSecondary: {
        value: "#666666";
    };
    foregroundNeutralSecondaryAlt: {
        value: "#777777";
    };
    foregroundNeutralSecondaryAlt2: {
        value: "#888888";
    };
    foregroundNeutralTertiary: {
        value: "#A6A6A6";
    };
    foregroundNeutralTertiaryAlt: {
        value: "#C8C8C8";
    };
    foregroundSelected: {
        value: "#333333";
    };
    foregroundButton: {
        value: "#666666";
    };
    background: {
        value: "#FFF";
    };
    backgroundLight: {
        value: "#EAEAEA";
    };
    backgroundNeutral: {
        value: "#C8C8C8";
    };
    backgroundDark: {
        value: "#000";
    };
    hyperlink: {
        value: "#1F3A93";
    };
    visitedHyperlink: {
        value: "#551A8B";
    };
    mapPushpin: {
        value: "#FF5F00";
    };
    shapeStroke: {
        value: "#01B8AA";
    };
    selection: {
        value: undefined;
    };
    separator: {
        value: undefined;
    };
    negative: {
        value: undefined;
    };
    neutral: {
        value: undefined;
    };
    positive: {
        value: undefined;
    };
    reset(): IColorPalette;
}
