import { MockILocale } from "./mockILocale";
import { MockITooltipService } from "./mockITooltipService";
import { MockISelectionManager } from "./mockISelectionManager";
import { MockISelectionIdBuilder } from "./mockISelectionIdBuilder";
import { MockIAuthenticationService } from "./mockIAuthenticationService";
import { MockITelemetryService } from "./mockITelemetryService";
import { MockILocalizationManager } from "./mockILocalizationManager";
import { MockISelectionId } from "./mockISelectionId";
import { MockIColorPalette } from "./mockIColorPalette";
import { MockIVisualHost } from "./mockVisualHost";
import { MockIEventService } from "./mockIEventService";
import { MockIStorageService } from "./mockIStorageService";
import { MockHostCapabilities } from "./mockHostCapabilities";
import { MockDownloadService } from "./mockDownloadService";
import { MockIVisualLicenseManager } from "./mockIVisualLicenseManager";
import { MockIWebAccessService } from "./mockIWebAccessService";
// eslint-disable-next-line @typescript-eslint/ban-types
export function createVisualHost(locale, allowInteractions, colors, isEnabled, displayNames, token) {
    return new MockIVisualHost(createColorPalette(colors), createSelectionManager(), createTooltipService(isEnabled), createLocale(locale), createLocalizationManager(displayNames), createTelemetryService(), createAuthenticationService(token), createStorageService(), createEventService(), createHostCapabilities(), createDownloadService(), licenseManager(), webAccessService());
}
export function createColorPalette(colors) {
    return new MockIColorPalette(colors);
}
export function createSelectionId(key = "") {
    return new MockISelectionId(key);
}
export function createSelectionIdBuilder() {
    return new MockISelectionIdBuilder();
}
export function createSelectionManager() {
    return new MockISelectionManager();
}
export function createTooltipService(isEnabled) {
    return new MockITooltipService(isEnabled);
}
// eslint-disable-next-line @typescript-eslint/ban-types
export function createLocale(locales) {
    return new MockILocale(locales);
}
export function createLocalizationManager(displayNames) {
    return new MockILocalizationManager(displayNames);
}
export function createTelemetryService() {
    return new MockITelemetryService();
}
export function createAuthenticationService(token) {
    return new MockIAuthenticationService(token);
}
export function createStorageService() {
    return new MockIStorageService();
}
export function createEventService() {
    return new MockIEventService();
}
export function createHostCapabilities() {
    return new MockHostCapabilities();
}
export function createDownloadService() {
    return new MockDownloadService();
}
export function licenseManager() {
    return new MockIVisualLicenseManager();
}
export function webAccessService() {
    return new MockIWebAccessService();
}
//# sourceMappingURL=mocks.js.map